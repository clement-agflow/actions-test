name: CI
on: [push]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v .

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build --tag clement/lol:latest .

      - name: Save and compress Docker image
        run: docker save clement/lol:latest | gzip > tmp.tar.gz

      - name: Copy image to staging server
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.STAGING_SERVER }}
          USERNAME: deployer
          PORT: 22
          KEY: ${{ secrets.SSH_kEY_STAGING }}
        with:
          source: "tmp.tar.gz,docker-compose.yml"
          target: "docker_deploy"

      - name: Deploy Docker image on staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_SERVER }}
          username: deployer
          key: ${{ secrets.SSH_kEY_STAGING }}
          port: 22
          script: |
            cd docker_deploy
            docker load -i tmp.tar.gz
            rm tmp.tar.gz
            docker-compose up -d
